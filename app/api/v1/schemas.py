"""API request and response model definitions."""

from typing import Any

from pydantic import BaseModel, ConfigDict, Field


class HealthCheckResponseStatus(BaseModel):
    """Response model to validate and return when performing a health check."""

    status: str = "OK"


class RAGQueryRequest(BaseModel):
    """Request model for querying the RAG system."""

    prompt: str = Field(
        ...,
        min_length=1,
        description="The question or prompt to send to the RAG system.",
    )

    model_config = ConfigDict(
        json_schema_extra={
            "example": {
                "prompt": "Give me a list of the data sources used for pre-training the Llama models.",
            }
        }
    )


class RAGSourceNode(BaseModel):
    """Model representing a retrieved source document."""

    text: str
    score: float | None = None
    node_id: str | None = None
    metadata: dict[str, Any] | None = None


class RAGQueryResponse(BaseModel):
    """Response model for the RAG query endpoint."""

    answer: str = Field(description="The answer generated by the RAG system.")
    sources: list[RAGSourceNode] = Field(
        description="List of source documents used for the answer"
    )

    model_config = ConfigDict(
        json_schema_extra={
            "example": {
                "answer": "Llama models are introduced by FAIR from META.",
                "score": 0.89,
                "metadata": {
                    "filename": "llama-open-and-efficient-fundation-llms.pdf",
                    "page_label": 6,
                },
            }
        }
    )


class RAGErrorResponse(BaseModel):
    """Error response model for RAG operations"""

    error: str = Field(description="A general error message.")
    details: str | None = Field(None, description="Specific details about the error.")

    model_config = ConfigDict(
        json_schema_extra={
            "example": {
                "error": "An error ocurrer while processing your query.",
                "details": "LLM service unavailable.",
            }
        }
    )
